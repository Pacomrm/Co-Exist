{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport logger from 'redux-logger';\nimport { projects } from '../features/projects/projectSlice.js';\nvar rootReducer = combineReducers({\n  projects: projects\n});\nvar preloadedState = {\n  projects: [{\n    \"id\": 0,\n    \"name\": \"json-server\",\n    \"description\": \"testing\",\n    \"founders\": [\"julio\", \"carmen\", \"pedro\"],\n    \"ods\": [\"rights\", \"envrioment\"],\n    \"objectives\": [\"1\", \"2\"],\n    \"location\": \"here\",\n    \"needs\": [\"this\", \"that\"]\n  }]\n  // visibilityFilter: 'SHOW_COMPLETED',\n};\n\nvar store = configureStore({\n  rootReducer: rootReducer\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  // devTools: process.env.NODE_ENV !== 'production',\n  // preloadedState,\n  // enhancers: [batchedSubscribe(debounceNotify)],\n});","map":{"version":3,"names":["applyMiddleware","combineReducers","createStore","thunk","configureStore","logger","projects","rootReducer","preloadedState","store"],"sources":["/Users/mrm/Documents/TECH/React/Redux/Co-exist/react-express-app/client/src/features/store.js"],"sourcesContent":["import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport {configureStore} from \"@reduxjs/toolkit\";\nimport logger from 'redux-logger'\nimport {projects} from '../features/projects/projectSlice.js'\n\nconst rootReducer = combineReducers({\n    projects,\n});\n\nconst preloadedState = {\n    projects: [\n        {\n            \"id\": 0,\n            \"name\": \"json-server\",\n            \"description\": \"testing\",\n            \"founders\": [\"julio\",\"carmen\",\"pedro\"],\n            \"ods\": [\"rights\",\"envrioment\"],\n            \"objectives\": [\"1\",\"2\"],\n            \"location\": \"here\",\n            \"needs\": [\"this\",\"that\"]\n        }\n    ]\n    // visibilityFilter: 'SHOW_COMPLETED',\n}\n\n\nconst store = configureStore({\n    rootReducer,\n    // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n    // devTools: process.env.NODE_ENV !== 'production',\n    // preloadedState,\n    // enhancers: [batchedSubscribe(debounceNotify)],\n});"],"mappings":"AAAA,SAAQA,eAAe,EAAEC,eAAe,EAAEC,WAAW,QAAO,OAAO;AACnE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,cAAc,QAAO,kBAAkB;AAC/C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAAQC,QAAQ,QAAO,sCAAsC;AAE7D,IAAMC,WAAW,GAAGN,eAAe,CAAC;EAChCK,QAAQ,EAARA;AACJ,CAAC,CAAC;AAEF,IAAME,cAAc,GAAG;EACnBF,QAAQ,EAAE,CACN;IACI,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,aAAa;IACrB,aAAa,EAAE,SAAS;IACxB,UAAU,EAAE,CAAC,OAAO,EAAC,QAAQ,EAAC,OAAO,CAAC;IACtC,KAAK,EAAE,CAAC,QAAQ,EAAC,YAAY,CAAC;IAC9B,YAAY,EAAE,CAAC,GAAG,EAAC,GAAG,CAAC;IACvB,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,CAAC,MAAM,EAAC,MAAM;EAC3B,CAAC;EAEL;AACJ,CAAC;;AAGD,IAAMG,KAAK,GAAGL,cAAc,CAAC;EACzBG,WAAW,EAAXA;EACA;EACA;EACA;EACA;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}