{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios, { all } from 'axios';\nimport { useFetch } from '../../services/useFetch';\nconst API_URL_BASE = \"http://localhost:3000/\";\nconst API_URL = \"http://localhost:3000/projects\";\nconst API_URL_ODS = \"http://localhost:3000/ods\";\nconst API_URL_LOCATIONS = \"http://localhost:3000/locations\";\nconst API_URL_NEEDS = \"http://localhost:3000/needs\";\nexport const projectsSlice = createSlice({\n  name: 'projects',\n  initialState: {\n    allProjects: [{}],\n    allODSs: [],\n    allLocations: [],\n    allNeeds: []\n  },\n  reducers: {\n    loadProjects: (state, action) => {\n      state.allProjects = action.payload;\n    },\n    loadODSs: (state, action) => {\n      state.allODSs = action.payload;\n    },\n    loadLocations: (state, action) => {\n      state.allLocations = action.payload;\n    },\n    loadNeeds: (state, action) => {\n      state.allNeeds = action.payload;\n    }\n  }\n});\nexport default projectsSlice.reducer;\nconst {\n  loadProjects,\n  loadODSs,\n  loadLocations,\n  loadNeeds\n} = projectsSlice.actions;\nexport const selectAllProjects = state => state.projects.allProjects;\nexport const selectAllODS = state => state.projects.allODSs;\nexport const selectAllLocations = state => state.projects.allLocations;\nexport const selectAllNeeds = state => state.projects.allNeeds;\n\n/* Action to load all projects initially */\n\nexport const loadAllProjects = () => {\n  var _s = $RefreshSig$();\n  return _s(async dispatch => {\n    _s();\n    console.log(API_URL);\n    const allProjects = useFetch(API_URL);\n    const allProjectsRes = await axios.get(`${API_URL}`);\n    dispatch(loadProjects(allProjectsRes.data));\n  }, \"sRqTp3nGqVSZqciXM8G1xocFkBY=\", false, function () {\n    return [useFetch];\n  });\n};\n/*Action to filter needs*/\nexport const loadAllNeeds = () => async dispatch => {\n  try {\n    const allNeedsRes = await axios.get(`${API_URL_NEEDS}`);\n    dispatch(loadNeeds(allNeedsRes.data));\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n/*Action to filter ods*/\nexport const loadAllODSs = () => async dispatch => {\n  try {\n    const allODSRes = await axios.get(`${API_URL_ODS}`);\n    dispatch(loadODSs(allODSRes.data));\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n/*Action to filter locations*/\nexport const loadAllLocations = () => async dispatch => {\n  try {\n    const allLocationsRes = await axios.get(`${API_URL_LOCATIONS}`);\n    dispatch(loadLocations(allLocationsRes.data));\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n\n/*One function to select projects according to the filter*/\nexport const loadProjectsByFilterArray = (name, filterType) => async dispatch => {\n  try {\n    let categoryFilter = [];\n    categoryFilter = Object.entries(filterType).filter(_ref => {\n      let [val, i] = _ref;\n      return i === true;\n    });\n    let filterFinal = categoryFilter[0][0];\n    const allProjects = await axios.get(`${API_URL}`);\n    let projectsFiltered = [];\n    allProjects.data.map(project => {\n      project[filterFinal].map(o => {\n        if (o === name) {\n          projectsFiltered.push(project);\n        }\n      });\n    });\n    dispatch(loadProjects(projectsFiltered));\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n\n/*Action to get projects by ODS*/\nexport const loadProjectsByLocation = locationName => {\n  return async (dispatch, getState) => {\n    const allProjects = await axios.get(`${API_URL}`);\n    let projectsByLocation = [];\n    allProjects.data.map(project => {\n      console.log(project.location);\n      if (project.location === locationName) {\n        projectsByLocation.push(project);\n      }\n    });\n    dispatch(loadProjects(projectsByLocation));\n  };\n};","map":{"version":3,"names":["createSlice","axios","all","useFetch","API_URL_BASE","API_URL","API_URL_ODS","API_URL_LOCATIONS","API_URL_NEEDS","projectsSlice","name","initialState","allProjects","allODSs","allLocations","allNeeds","reducers","loadProjects","state","action","payload","loadODSs","loadLocations","loadNeeds","reducer","actions","selectAllProjects","projects","selectAllODS","selectAllLocations","selectAllNeeds","loadAllProjects","_s","$RefreshSig$","dispatch","console","log","allProjectsRes","get","data","loadAllNeeds","allNeedsRes","e","error","message","loadAllODSs","allODSRes","loadAllLocations","allLocationsRes","loadProjectsByFilterArray","filterType","categoryFilter","Object","entries","filter","_ref","val","i","filterFinal","projectsFiltered","map","project","o","push","loadProjectsByLocation","locationName","getState","projectsByLocation","location"],"sources":["/Users/mrm/Documents/TECH/React/Redux/Co-exist/react-express-app/client/src/features/projects/projectSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport axios, {all} from 'axios';\nimport {useFetch} from '../../services/useFetch';\n\nconst API_URL_BASE = \"http://localhost:3000/\";\nconst API_URL = \"http://localhost:3000/projects\";\nconst API_URL_ODS = \"http://localhost:3000/ods\";\nconst API_URL_LOCATIONS = \"http://localhost:3000/locations\";\nconst API_URL_NEEDS = \"http://localhost:3000/needs\";\n\nexport const projectsSlice = createSlice({\n    name: 'projects',\n    initialState: {\n        allProjects: [{}],\n        allODSs:[],\n        allLocations:[],\n        allNeeds:[],\n    },\n    reducers: {\n        loadProjects: (state, action) => {\n            state.allProjects = action.payload;\n        },\n        loadODSs: (state, action) =>{\n            state.allODSs = action.payload;\n        },\n        loadLocations: (state, action) =>{\n            state.allLocations = action.payload;\n        },\n        loadNeeds: (state, action) =>{\n            state.allNeeds = action.payload;\n        }\n    },\n})\n\nexport default projectsSlice.reducer;\nconst {loadProjects, loadODSs, loadLocations,loadNeeds} = projectsSlice.actions;\nexport const selectAllProjects = (state) => state.projects.allProjects;\nexport const selectAllODS = (state) => state.projects.allODSs;\nexport const selectAllLocations = (state) => state.projects.allLocations;\nexport const selectAllNeeds = (state) => state.projects.allNeeds;\n\n/* Action to load all projects initially */\n\n\nexport const loadAllProjects = () => async dispatch => {\n    console.log(API_URL);\n    const allProjects = useFetch(API_URL);\n    const allProjectsRes = await axios.get(`${API_URL}`);\n    dispatch(loadProjects(allProjectsRes.data));\n}\n/*Action to filter needs*/\nexport const loadAllNeeds = () => async dispatch => {\n    try{\n        const allNeedsRes = await axios.get(`${API_URL_NEEDS}`);\n        dispatch(loadNeeds(allNeedsRes.data));\n    }catch(e){\n        return console.error(e.message);\n    }\n}\n/*Action to filter ods*/\nexport const loadAllODSs = () => async dispatch => {\n    try{\n        const allODSRes = await axios.get(`${API_URL_ODS}`);\n        dispatch(loadODSs(allODSRes.data));\n    }catch(e){\n        return console.error(e.message);\n    }\n}\n/*Action to filter locations*/\nexport const loadAllLocations = () => async dispatch => {\n    try{\n        const allLocationsRes = await axios.get(`${API_URL_LOCATIONS}`);\n        dispatch(loadLocations(allLocationsRes.data));\n    }catch(e){\n        return console.error(e.message);\n    }\n}\n\n/*One function to select projects according to the filter*/\nexport const loadProjectsByFilterArray = (name,filterType) => async dispatch => {\n    try{\n        let categoryFilter = [];\n        categoryFilter = Object.entries(filterType).filter( ([val,i]) => i === true);\n        let filterFinal = categoryFilter[0][0];\n\n        const allProjects = await axios.get(`${API_URL}`);\n        let projectsFiltered =[];\n        allProjects.data.map( project => {\n            project[filterFinal].map( o => {\n                if(o === name){\n                    projectsFiltered.push(project);\n                }\n            })\n        })\n        dispatch(loadProjects(projectsFiltered));\n\n    }catch(e){\n        return console.error(e.message);\n    }\n}\n\n/*Action to get projects by ODS*/\nexport const loadProjectsByLocation = (locationName) => {\n    return async (dispatch, getState) => {\n        const allProjects = await axios.get(`${API_URL}`);\n        let projectsByLocation =[];\n        allProjects.data.map( project => {\n            console.log(project.location);\n            if(project.location === locationName){\n                projectsByLocation.push(project);\n            }\n        })\n        dispatch(loadProjects(projectsByLocation));\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}