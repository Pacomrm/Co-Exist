{"ast":null,"code":"var _jsxFileName = \"/Users/mrm/Documents/TECH/React/Redux/Co-exist/react-express-app/client/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Project } from '@components/forms/Project.js';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [res, setRes] = useState({\n  response: '',\n  post: '',\n  responseToPost: ''\n});\nuseEffect(() => {\n  callApi().then(res => this.setState({\n    response: res.express\n  })).catch(err => console.log(err));\n});\nconst callApi = async () => {\n  const response = await fetch('/api/hello');\n  const body = await response.json();\n  if (response.status !== 200) throw Error(body.message);\n  return body;\n};\nconst handleSubmit = async e => {\n  e.preventDefault();\n  const response = await fetch('/api/data', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      post: res.post\n    })\n  });\n  const body = await response.text();\n  setRes({\n    ...res,\n    responseToPost: body\n  });\n};\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Project, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: res.response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Post to Server:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: res.post,\n          onChange: e => setRes({\n            ...res,\n            post: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Project","useEffect","useState","jsxDEV","_jsxDEV","res","setRes","response","post","responseToPost","callApi","then","setState","express","catch","err","console","log","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/mrm/Documents/TECH/React/Redux/Co-exist/react-express-app/client/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {Project} from '@components/forms/Project.js';\nimport {useEffect, useState} from \"react\";\n\nconst [res, setRes] = useState({\n    response: '',\n    post: '',\n    responseToPost: '',\n});\n\nuseEffect( ()=>{\n    callApi()\n        .then(res => this.setState({ response: res.express }))\n        .catch(err => console.log(err));\n})\n\nconst callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n};\n\nconst handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/data', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ post: res.post }),\n    });\n    const body = await response.text();\n\n    setRes({\n        ...res,\n        responseToPost: body\n    });\n};\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Project/>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n            {res.response}\n        </p>\n          <form onSubmit={handleSubmit}>\n              <p>\n                  <strong>Post to Server:</strong>\n              </p>\n              <input\n                  type=\"text\"\n                  value={ res.post}\n                  onChange={e => setRes({...res, post: e.target.value})}\n              />\n              <button type=\"submit\">Submit</button>\n          </form>\n      </header>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}