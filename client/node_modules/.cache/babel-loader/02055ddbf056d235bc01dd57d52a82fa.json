{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport logger from 'redux-logger';\nimport { projects } from '../features/projects/projectSlice.js';\nexport var rootReducer = {\n  projects: projects\n};\nvar preloadedState = {\n  projects: [{\n    \"id\": 0,\n    \"name\": \"json-server\",\n    \"description\": \"testing\",\n    \"founders\": [\"julio\", \"carmen\", \"pedro\"],\n    \"ods\": [\"rights\", \"envrioment\"],\n    \"objectives\": [\"1\", \"2\"],\n    \"location\": \"here\",\n    \"needs\": [\"this\", \"that\"]\n  }]\n  // visibilityFilter: 'SHOW_COMPLETED',\n};\n\nexport var store = configureStore({\n  rootReducer: rootReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware().concat(logger);\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState: preloadedState\n  // enhancers: [batchedSubscribe(debounceNotify)],\n});","map":{"version":3,"names":["applyMiddleware","createStore","thunk","configureStore","logger","projects","rootReducer","preloadedState","store","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV"],"sources":["/Users/mrm/Documents/TECH/React/Redux/Co-exist/react-express-app/client/src/features/store.js"],"sourcesContent":["import {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport {configureStore} from \"@reduxjs/toolkit\";\nimport logger from 'redux-logger'\nimport {projects} from '../features/projects/projectSlice.js'\n\nexport const rootReducer = {\n    projects\n}\n\nconst preloadedState = {\n    projects: [\n        {\n            \"id\": 0,\n            \"name\": \"json-server\",\n            \"description\": \"testing\",\n            \"founders\": [\"julio\",\"carmen\",\"pedro\"],\n            \"ods\": [\"rights\",\"envrioment\"],\n            \"objectives\": [\"1\",\"2\"],\n            \"location\": \"here\",\n            \"needs\": [\"this\",\"that\"]\n        }\n    ]\n    // visibilityFilter: 'SHOW_COMPLETED',\n}\n\n\nexport const store = configureStore({\n    rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n    devTools: process.env.NODE_ENV !== 'production',\n    preloadedState,\n    // enhancers: [batchedSubscribe(debounceNotify)],\n});"],"mappings":"AAAA,SAAQA,eAAe,EAAEC,WAAW,QAAO,OAAO;AAClD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,cAAc,QAAO,kBAAkB;AAC/C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAAQC,QAAQ,QAAO,sCAAsC;AAE7D,OAAO,IAAMC,WAAW,GAAG;EACvBD,QAAQ,EAARA;AACJ,CAAC;AAED,IAAME,cAAc,GAAG;EACnBF,QAAQ,EAAE,CACN;IACI,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,aAAa;IACrB,aAAa,EAAE,SAAS;IACxB,UAAU,EAAE,CAAC,OAAO,EAAC,QAAQ,EAAC,OAAO,CAAC;IACtC,KAAK,EAAE,CAAC,QAAQ,EAAC,YAAY,CAAC;IAC9B,YAAY,EAAE,CAAC,GAAG,EAAC,GAAG,CAAC;IACvB,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,CAAC,MAAM,EAAC,MAAM;EAC3B,CAAC;EAEL;AACJ,CAAC;;AAGD,OAAO,IAAMG,KAAK,GAAGL,cAAc,CAAC;EAChCG,WAAW,EAAXA,WAAW;EACXG,UAAU,EAAE,SAAAA,WAACC,oBAAoB;IAAA,OAAKA,oBAAoB,EAAE,CAACC,MAAM,CAACP,MAAM,CAAC;EAAA;EAC3EQ,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EAC/CR,cAAc,EAAdA;EACA;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}