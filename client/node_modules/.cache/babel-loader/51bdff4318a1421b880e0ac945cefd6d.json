{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { rootReducer } from './rootReducer';\nimport thunk from 'redux-thunk';\nvar store = configureStore({\n  rootReducer: rootReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware().concat(logger);\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState: preloadedState,\n  enhancers: [batchedSubscribe(debounceNotify)]\n});","map":{"version":3,"names":["applyMiddleware","createStore","rootReducer","thunk","store","configureStore","middleware","getDefaultMiddleware","concat","logger","devTools","process","env","NODE_ENV","preloadedState","enhancers","batchedSubscribe","debounceNotify"],"sources":["/Users/mrm/Documents/TECH/React/Redux/Co-exist/react-express-app/client/src/features/store.js"],"sourcesContent":["import {applyMiddleware, createStore} from 'redux';\nimport {rootReducer} from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store = configureStore({\n    rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n    devTools: process.env.NODE_ENV !== 'production',\n    preloadedState,\n    enhancers: [batchedSubscribe(debounceNotify)],\n});"],"mappings":"AAAA,SAAQA,eAAe,EAAEC,WAAW,QAAO,OAAO;AAClD,SAAQC,WAAW,QAAO,eAAe;AACzC,OAAOC,KAAK,MAAM,aAAa;AAE/B,IAAMC,KAAK,GAAGC,cAAc,CAAC;EACzBH,WAAW,EAAXA,WAAW;EACXI,UAAU,EAAE,SAAAA,WAACC,oBAAoB;IAAA,OAAKA,oBAAoB,EAAE,CAACC,MAAM,CAACC,MAAM,CAAC;EAAA;EAC3EC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EAC/CC,cAAc,EAAdA,cAAc;EACdC,SAAS,EAAE,CAACC,gBAAgB,CAACC,cAAc,CAAC;AAChD,CAAC,CAAC"},"metadata":{},"sourceType":"module"}