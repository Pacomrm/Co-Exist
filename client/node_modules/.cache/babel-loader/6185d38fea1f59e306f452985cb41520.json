{"ast":null,"code":"var _jsxFileName = \"/Users/mrm/Documents/TECH/React/Redux/Co-exist/react-express-app/client/src/views/Projects/Projects.js\";\nimport React, { useEffect } from 'react';\nimport { ProjectNav } from \"./ProjectNav\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadAllProjects, selectAllProjects } from \"../../features/projects/projectSlice\";\nimport ProjectsList from \"../../views/Projects/ProjectsList\";\nimport { Container } from \"react-bootstrap\";\nexport function Projects() {\n  var allProjects = useSelector(selectAllProjects);\n  var dispatch = useDispatch();\n  console.log(\"All Projects\", allProjects);\n  var display = {};\n  // const dispatch = useDispatch();\n  // const [allProjects, setAllProjects] = useState({});\n\n  useEffect(function () {\n    dispatch(loadAllProjects());\n    // setAllProjects(store.getState());\n  }, [allProjects]);\n  if (allProjects > 1) {\n    display = /*#__PURE__*/React.createElement(ProjectsList, {\n      projects: allProjects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }\n    });\n  } else {\n    display = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    }, \"No projects yet\");\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    fluid: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProjectNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"projects-upper-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, display)));\n}\n\n// Container for display projects component","map":{"version":3,"names":["React","useEffect","ProjectNav","useDispatch","useSelector","loadAllProjects","selectAllProjects","ProjectsList","Container","Projects","allProjects","dispatch","console","log","display","createElement","projects","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","fluid","className"],"sources":["/Users/mrm/Documents/TECH/React/Redux/Co-exist/react-express-app/client/src/views/Projects/Projects.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {ProjectNav} from \"./ProjectNav\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loadAllProjects,selectAllProjects} from \"../../features/projects/projectSlice\";\nimport ProjectsList from \"../../views/Projects/ProjectsList\";\n\nimport {Container} from \"react-bootstrap\";\n\nexport function Projects(){\n\n    const allProjects = useSelector(selectAllProjects);\n    const dispatch = useDispatch();\n    console.log(\"All Projects\",allProjects);\n    let display = {};\n    // const dispatch = useDispatch();\n    // const [allProjects, setAllProjects] = useState({});\n\n    useEffect(()=>{\n        dispatch(loadAllProjects());\n        // setAllProjects(store.getState());\n    },[allProjects])\n\n    if(allProjects>1){\n        display =  <ProjectsList projects={allProjects}/>;\n    }else{\n        display = <p>No projects yet</p>;\n    }\n\n    return (\n        <>\n            <Container fluid=\"md\">\n                <ProjectNav/>\n                <section className=\"projects-upper-container\">\n                    {display}\n                </section>\n            </Container>\n\n\n\n            {/*<section className=\"projects-bottom-container\">*/}\n            {/*    <h2>Sign in to interact</h2>*/}\n            {/*    <p>Form</p>*/}\n            {/*    <div className=\"projects-signin-form\">*/}\n\n            {/*    </div>*/}\n            {/*</section>*/}\n        </>\n    )\n}\n\n\n// Container for display projects component"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,UAAU,QAAO,cAAc;AACvC,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,eAAe,EAACC,iBAAiB,QAAO,sCAAsC;AACtF,OAAOC,YAAY,MAAM,mCAAmC;AAE5D,SAAQC,SAAS,QAAO,iBAAiB;AAEzC,OAAO,SAASC,QAAQA,CAAA,EAAE;EAEtB,IAAMC,WAAW,GAAGN,WAAW,CAACE,iBAAiB,CAAC;EAClD,IAAMK,QAAQ,GAAGR,WAAW,EAAE;EAC9BS,OAAO,CAACC,GAAG,CAAC,cAAc,EAACH,WAAW,CAAC;EACvC,IAAII,OAAO,GAAG,CAAC,CAAC;EAChB;EACA;;EAEAb,SAAS,CAAC,YAAI;IACVU,QAAQ,CAACN,eAAe,EAAE,CAAC;IAC3B;EACJ,CAAC,EAAC,CAACK,WAAW,CAAC,CAAC;EAEhB,IAAGA,WAAW,GAAC,CAAC,EAAC;IACbI,OAAO,gBAAId,KAAA,CAAAe,aAAA,CAACR,YAAY;MAACS,QAAQ,EAAEN,WAAY;MAAAO,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAE;EACrD,CAAC,MAAI;IACDR,OAAO,gBAAGd,KAAA,CAAAe,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,iBAAe,CAAI;EACpC;EAEA,oBACItB,KAAA,CAAAe,aAAA,CAAAf,KAAA,CAAAuB,QAAA,qBACIvB,KAAA,CAAAe,aAAA,CAACP,SAAS;IAACgB,KAAK,EAAC,IAAI;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjBtB,KAAA,CAAAe,aAAA,CAACb,UAAU;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAE,eACbtB,KAAA,CAAAe,aAAA;IAASU,SAAS,EAAC,0BAA0B;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxCR,OAAO,CACF,CACF,CAWb;AAEX;;AAGA"},"metadata":{},"sourceType":"module"}